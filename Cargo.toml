[package]
name = "csaf-verification-js"
version = "0.1.0"
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
#sequoia-openpgp = { version = "1", default-features = false }
#chrono = { version = "0.4", default-features = false, features = ["wasmbind"] }
csaf = { version = "0.5.0", default-features = false }
#wasm-bindgen = "0.2"
#wasm-bindgen-futures = "0.4"
#wasm-logger = "0.2"
cve = "0.2.1"
cvss = { version = "2", features = ["serde"] }
async-trait = "0.1"
#tokio = { version = "1", features = ["full"] }
serde_json = "1.0.114"
thiserror = "1"
anyhow = "1"
wasm-bindgen = "0.2.84"
#wasm-bindgen-test = "0.2"
log = "0.4.17"
# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }
console_log = "0.2"
web-sys = { version = "0.3", features = ["Window","Performance"] }
# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
#wee_alloc = { version = "0.4.5", optional = true }

#[dependencies.web-sys]
#version = "0.3.61"
#features = [
#    "DataTransfer",
#    "File",
#]

#[dev-dependencies]
#wasm-bindgen-test = "0.2"

[dev-dependencies]
wasm-bindgen-test = "0.3.34"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
